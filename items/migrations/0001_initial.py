# Generated by Django 2.0.1 on 2018-01-18 10:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BindingMaterialDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Binding material details text')),
            ],
        ),
        migrations.CreateModel(
            name='BindingMaterialDetailsEquivalent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Equivalent text')),
                ('binding_material_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.BindingMaterialDetails')),
            ],
        ),
        migrations.CreateModel(
            name='BookFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Format name')),
            ],
        ),
        migrations.CreateModel(
            name='BookFormatEquivalent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Equivalent text')),
                ('book_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.BookFormat')),
            ],
        ),
        migrations.CreateModel(
            name='BookItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_publication', models.DateField(verbose_name='Date of publication')),
                ('date_of_publication_tag', models.CharField(max_length=128, verbose_name='Date of publication tag')),
                ('number_of_volumes', models.CharField(max_length=128, verbose_name='Number of volumes, as listed in the catalogue')),
                ('sales_price', models.CharField(max_length=128, verbose_name='Sales price')),
                ('buyer', models.TextField(verbose_name='Buyer of a book item')),
                ('binding_material_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.BindingMaterialDetails')),
                ('book_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.BookFormat')),
            ],
        ),
        migrations.CreateModel(
            name='Catalogue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField()),
                ('full_title', models.TextField(verbose_name='Full title')),
                ('preface_and_paratexts', models.TextField(verbose_name='Preface or prefatory / concluding text')),
                ('date_of_publication', models.DateField(verbose_name='Date of publication')),
                ('date_of_publication_tag', models.CharField(max_length=128, verbose_name='Date of publication tag')),
                ('notes', models.TextField(verbose_name='Notes for the Mediate project')),
                ('bibliography', models.TextField(verbose_name='Bibliography')),
            ],
        ),
        migrations.CreateModel(
            name='CatalogueItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField()),
                ('bookseller_category_books', models.TextField(verbose_name='Heading / category used to describe books')),
                ('bookseller_category_non_books', models.TextField(verbose_name='Heading / category for other, non-book items')),
                ('number_in_catalogue', models.CharField(max_length=128, verbose_name='Number of items as listed in catalogue')),
                ('item_as_listed_in_catalogue', models.TextField(verbose_name='Full item description, exactly as in the catalogue')),
            ],
        ),
        migrations.CreateModel(
            name='CatalogueType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name of the catalogue type')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('language_code_2char', models.CharField(help_text='Language code (2 characters long) of a written language. This also includes codes of the form zh-Hans, cf. IETF BCP 47', max_length=7, unique=True)),
                ('language_code_3char', models.CharField(help_text='ISO 639-3 language code (3 characters long) of a written language.', max_length=3, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('viaf_id', models.CharField(max_length=128, verbose_name='VIAF ID (https://viaf.org)')),
            ],
        ),
        migrations.CreateModel(
            name='PersonBookItemRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.BookItem')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Person')),
            ],
        ),
        migrations.CreateModel(
            name='PersonBookItemRelationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Type of person-book item relation')),
            ],
        ),
        migrations.CreateModel(
            name='PersonCatalogueRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalogue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Catalogue')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Person')),
            ],
        ),
        migrations.CreateModel(
            name='PersonCatalogueRelationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Type of person-catalogue relation')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name of the place')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceEquivalent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Equivalent text')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Place')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name of the place type')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Publisher name')),
            ],
        ),
        migrations.CreateModel(
            name='PublisherEquivalent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Equivalent text')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Publisher')),
            ],
        ),
        migrations.CreateModel(
            name='TitleWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text of the title of a work')),
            ],
        ),
        migrations.AddField(
            model_name='personcataloguerelation',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.PersonCatalogueRelationType'),
        ),
        migrations.AddField(
            model_name='personbookitemrelation',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.PersonBookItemRelationType'),
        ),
        migrations.AddField(
            model_name='catalogue',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.CatalogueType'),
        ),
        migrations.AddField(
            model_name='bookitem',
            name='catalogue_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.CatalogueItem'),
        ),
        migrations.AddField(
            model_name='bookitem',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Language'),
        ),
        migrations.AddField(
            model_name='bookitem',
            name='place_of_publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Place'),
        ),
        migrations.AddField(
            model_name='bookitem',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.Publisher'),
        ),
        migrations.AddField(
            model_name='bookitem',
            name='title_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.TitleWork'),
        ),
    ]
